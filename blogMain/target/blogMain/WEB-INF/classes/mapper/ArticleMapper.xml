<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springmvc.dao.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.springmvc.pojo.Article">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="favor_num" jdbcType="INTEGER" property="favorNum"/>
        <result column="pageview_num" jdbcType="INTEGER" property="pageviewNum"/>
        <result column="post_time" jdbcType="TIMESTAMP" property="postTime"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="brief" jdbcType="VARCHAR" property="brief"/>
        <result column="img_url" jdbcType="VARCHAR" property="imgUrl"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.springmvc.pojo.Article">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithCategory" type="com.springmvc.pojo.Article">
        <association property="category" javaType="com.springmvc.pojo.Category">
            <id column="id" property="id" />
            <result column="category_name" property="categoryName" />
        </association>
    </resultMap>
    <resultMap extends="ResultMapWithBLOBs" id="ResultMapWithBLOBsAndCategory" type="com.springmvc.pojo.Article">
        <association property="category" javaType="com.springmvc.pojo.Category">
            <id column="id" property="id" />
            <result column="category_name" property="categoryName" />
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

  <sql id="WithCategory_Column_List">
    ar.id,  ar.title, ar.author, ar.favor_num, ar.pageview_num, ar.post_time, ar.category_id, ar.brief, ar.img_url, ca.id, ca.category_name
  </sql>
    <sql id="Base_Column_List">
    id, title, author, favor_num, pageview_num, post_time, category_id, brief, img_url
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectByExampleWithBLOBsAndCategory" parameterType="com.springmvc.pojo.ArticleExample"
            resultMap="ResultMapWithBLOBsAndCategory">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="WithCategory_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tbl_article ar
        left join tbl_category ca on ar.category_id=ca.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleWithCategory" parameterType="com.springmvc.pojo.ArticleExample"
            resultMap="ResultMapWithCategory">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="WithCategory_Column_List"/>
        from tbl_article ar
        left join tbl_category ca on ar.category_id=ca.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleWithBLOBs" parameterType="com.springmvc.pojo.ArticleExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tbl_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.springmvc.pojo.ArticleExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tbl_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tbl_article
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.springmvc.pojo.ArticleExample">
        delete from tbl_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.springmvc.pojo.Article">
    insert into tbl_article (id, title, author, 
      favor_num, pageview_num, post_time, 
      category_id, brief, img_url, 
      content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{favorNum,jdbcType=INTEGER}, #{pageviewNum,jdbcType=INTEGER}, #{postTime,jdbcType=TIMESTAMP}, 
      #{categoryId,jdbcType=INTEGER}, #{brief,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.springmvc.pojo.Article">
        insert into tbl_article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="favorNum != null">
                favor_num,
            </if>
            <if test="pageviewNum != null">
                pageview_num,
            </if>
            <if test="postTime != null">
                post_time,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="brief != null">
                brief,
            </if>
            <if test="imgUrl != null">
                img_url,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="favorNum != null">
                #{favorNum,jdbcType=INTEGER},
            </if>
            <if test="pageviewNum != null">
                #{pageviewNum,jdbcType=INTEGER},
            </if>
            <if test="postTime != null">
                #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="brief != null">
                #{brief,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null">
                #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.springmvc.pojo.ArticleExample" resultType="java.lang.Long">
        select count(*) from tbl_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tbl_article
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.author != null">
                author = #{record.author,jdbcType=VARCHAR},
            </if>
            <if test="record.favorNum != null">
                favor_num = #{record.favorNum,jdbcType=INTEGER},
            </if>
            <if test="record.pageviewNum != null">
                pageview_num = #{record.pageviewNum,jdbcType=INTEGER},
            </if>
            <if test="record.postTime != null">
                post_time = #{record.postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.categoryId != null">
                category_id = #{record.categoryId,jdbcType=INTEGER},
            </if>
            <if test="record.brief != null">
                brief = #{record.brief,jdbcType=VARCHAR},
            </if>
            <if test="record.imgUrl != null">
                img_url = #{record.imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update tbl_article
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        author = #{record.author,jdbcType=VARCHAR},
        favor_num = #{record.favorNum,jdbcType=INTEGER},
        pageview_num = #{record.pageviewNum,jdbcType=INTEGER},
        post_time = #{record.postTime,jdbcType=TIMESTAMP},
        category_id = #{record.categoryId,jdbcType=INTEGER},
        brief = #{record.brief,jdbcType=VARCHAR},
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tbl_article
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        author = #{record.author,jdbcType=VARCHAR},
        favor_num = #{record.favorNum,jdbcType=INTEGER},
        pageview_num = #{record.pageviewNum,jdbcType=INTEGER},
        post_time = #{record.postTime,jdbcType=TIMESTAMP},
        category_id = #{record.categoryId,jdbcType=INTEGER},
        brief = #{record.brief,jdbcType=VARCHAR},
        img_url = #{record.imgUrl,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.pojo.Article">
        update tbl_article
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="favorNum != null">
                favor_num = #{favorNum,jdbcType=INTEGER},
            </if>
            <if test="pageviewNum != null">
                pageview_num = #{pageviewNum,jdbcType=INTEGER},
            </if>
            <if test="postTime != null">
                post_time = #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="brief != null">
                brief = #{brief,jdbcType=VARCHAR},
            </if>
            <if test="imgUrl != null">
                img_url = #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.springmvc.pojo.Article">
    update tbl_article
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      favor_num = #{favorNum,jdbcType=INTEGER},
      pageview_num = #{pageviewNum,jdbcType=INTEGER},
      post_time = #{postTime,jdbcType=TIMESTAMP},
      category_id = #{categoryId,jdbcType=INTEGER},
      brief = #{brief,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.springmvc.pojo.Article">
    update tbl_article
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      favor_num = #{favorNum,jdbcType=INTEGER},
      pageview_num = #{pageviewNum,jdbcType=INTEGER},
      post_time = #{postTime,jdbcType=TIMESTAMP},
      category_id = #{categoryId,jdbcType=INTEGER},
      brief = #{brief,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>